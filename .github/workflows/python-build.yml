name: Python Application Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Upgrade pip and install build + pytest
        run: |
          python -m pip install --upgrade pip
          pip install build pytest

      - name: Run tests (JUnit XML) â€” allow failures but continue
        continue-on-error: true
        run: |
          pytest --maxfail=1 --disable-warnings -q --junitxml=results.xml || true

      - name: Build package
        run: |
          python -m build

      - name: Package artifact (create single zip)
        run: |
          mkdir -p packaged_artifact
          cp -r dist packaged_artifact/ || true
          cp results.xml packaged_artifact/ || true
          PACKAGE_NAME="package-${{ github.run_number }}-${{ github.sha }}.zip"
          zip -r "$PACKAGE_NAME" packaged_artifact
          echo "Created $PACKAGE_NAME"
          ls -lh "$PACKAGE_NAME"

      - name: Upload packaged artifact (single zip)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: python-app-zip
          path: package-*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download packaged artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app-zip
          path: downloaded_artifacts/

      - name: Verify downloaded contents
        run: |
          echo "Downloaded files:"
          ls -la downloaded_artifacts || true

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          name: "v${{ github.run_number }}"
          body: "Python application build and test artifacts."
          files: downloaded_artifacts/package-*.zip


